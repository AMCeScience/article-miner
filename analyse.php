<?php

require_once("config.php");
require_once("database.php");

$db = new Connector();

$db->connect($config);

require_once("models/articles.php");
require_once("models/outcomes.php");
require_once("models/alchemy_outcomes.php");

$article_model = new Articles();
$outcome_model = new Outcomes();
$alchemy_outcome_model = new AlchemyOutcomes();

if ($config["alchemy_clear_tables"]) {
  $alchemy_outcome_model->clear($db);

  echo 'Cleared tables';

  return;
}

// Get article id from the last inserted outcome
$last_outcome = $outcome_model->last($db);
// Find the next article to process
$next_article = $article_model->next($db, $last_outcome["article"]);

// If article exists
if ($next_article) {
  // Get article id
  $this_article_id = $next_article["id"];

  // Insert new outcome
  $this_outcome_id = $outcome_model->insert($db, $this_article_id);

  // Start Alchemy API
  require_once("alchemyAPI/alchemyapi.php");

  $alchemyapi = new AlchemyAPI($config["alchemy_key_dir"]);

  // Get response
  // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> TODO INSERT TEXT <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
  // $response = $alchemyapi->combined('text', $demo_text, null);
  
  // $response = array(
  //   "status" => "OK", 
  //   "usage" => "By accessing AlchemyAPI or using information generated by AlchemyAPI, you are agreeing to be bound by the AlchemyAPI Terms of Use: http://www.alchemyapi.com/company/terms.html",
  //   "totalTransactions" => 4,
  //   "language" => "english",
  //   "keywords" => array(
  //     array("text" => "fancy iPhone", "relevance" => 0.983037),
  //     array("text" => "dumb Bob", "relevance" => 0.904227),
  //     array("text" => "beautiful Denver", "relevance" => 0.835704),
  //     array("text" => "Apple Store", "relevance" => 0.721868),
  //     array("text" => "Colorado", "relevance" => 0.38689)
  //   ),
  //   "concepts" => array(
  //     array("text" => "Apple Store", "relevance" => 0.932431),
  //     array("text" => "Apple Inc.", "relevance" => 0.891859)
  //   ),
  //   "entities" => array(
  //     array("type" => "FieldTerminology", "relevance" => 0.884345, "count" => 1, "text" => "Apple Store"),
  //     array("type" => "Technology", "relevance" => 0.728395, "count" => 1, "text" => "iPhone")
  //   ),
  //   "taxonomy" => array(
  //     array("label" => "/shopping/retail/online stores", "score" => 0.692631),
  //     array("confident" => "no", "label" => "/technology and computing/consumer electronics/telephones/mobile phones/smart phones", "score" => 0.212776),
  //     array("confident" => "no", "label" => "/style and fashion/clothing/pants", "score" => 0.14874)
  //   )
  // );

  // Got response
  if ($response["status"] == "OK") {
    // Insert keywords
    $keywords = $response["keywords"];

    foreach ($keywords as $keyword) {
      $alchemy_outcome_model->insert_keyword($db, $keyword, $this_outcome_id);
    }

    // Insert concepts
    $concepts = $response["concepts"];

    foreach ($concepts as $concept) {
      $alchemy_outcome_model->insert_concept($db, $concept, $this_outcome_id);
    }

    // Insert entities
    $entities = $response["entities"];

    foreach ($entities as $entity) {
      $alchemy_outcome_model->insert_entity($db, $entity, $this_outcome_id);
    }

    // Insert taxonomy
    $taxonomies = $response["taxonomy"];

    foreach ($taxonomies as $taxonomy) {
      $alchemy_outcome_model->insert_taxonomy($db, $taxonomy, $this_outcome_id);
    }
  } else {
    echo "Error in the taxonomy call: ", $response["statusInfo"];
  }
} else {
  echo "Error: no next article.";
}

?>